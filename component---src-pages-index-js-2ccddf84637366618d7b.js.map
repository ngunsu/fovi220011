{"version":3,"file":"component---src-pages-index-js-2ccddf84637366618d7b.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/people.js","webpack://gatsby-starter-default/./src/components/articles.js","webpack://gatsby-starter-default/./src/components/material.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport \"../styles/bulma.min.css\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Header = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allDataYaml {\n        nodes {\n          title\n          abstract\n          institutions {\n            name\n            logo_path\n          }\n          showcase_title\n          showcase_url\n        }\n      }\n    }\n  `);\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"container is-max-desktop\">\n          <div className=\"columns is-centered is-vcentered\">\n            {data.allDataYaml.nodes[0].institutions.map(\n              (institution, index) => (\n                <div className=\"column has-text-centered\" key={index}>\n                  <img\n                    src={`images/${institution.logo_path}`}\n                    alt={institution.name}\n                    style={{ maxHeight: \"100px\" }}\n                  />\n                </div>\n              )\n            )}\n          </div>\n\n          <div className=\"columns is-centered\">\n            <div className=\"column has-text-centered\">\n              <h1 className=\"title is-1 publication-title\">\n                {data.allDataYaml.nodes[0].title}\n              </h1>\n            </div>\n          </div>\n\n          <div className=\"columns is-centered\">\n            <div className=\"column has-text-centered\">\n              <iframe\n                frameborder=\"0\"\n                allowfullscreen=\"\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                title=\"showcase\"\n                width=\"640\"\n                height=\"390\"\n                src={`${data.allDataYaml.nodes[0].showcase_url}?enablejsapi=1&amp;origin=http%3A%2F%2Flocalhost%3A8888&amp;widgetid=1\" id=\"widget2`}\n              ></iframe>\n            </div>\n          </div>\n\n          <div className=\"columns is-centered\">\n            <div className=\"column has-text-justified\">\n              {data.allDataYaml.nodes[0].abstract}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"../styles/index.css\";\nimport \"../styles/bulma.min.css\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst People = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allDataYaml {\n        nodes {\n          team {\n            name\n            position\n            email\n            image_path\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"container is-max-desktop\">\n          <h4 className=\"title is-4 has-text-left\"> Equipo de trabajo </h4>\n\n          <div className=\"columns is-centered is-vcentered\">\n            {data.allDataYaml.nodes[0].team.map((team, _) => (\n              <div class=\"column is-narrow\">\n                <figure class=\"image is-128x128\">\n                  <img\n                    src={`images/${team.image_path}`}\n                    alt={team.name}\n                    class=\"is-rounded\"\n                  />\n                </figure>\n                <div class=\"profile-info\">\n                  <p class=\"title is-5\">{team.name}</p>\n                  <p class=\"subtitle is-6\">\n                    <a href={`mailto:${team.email}`}> Correo </a>\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default People;\n","import React from \"react\";\nimport \"../styles/index.css\";\nimport \"../styles/bulma.min.css\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Articles = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allDataYaml {\n        nodes {\n          articles {\n            APA\n            url\n            image_path\n            video_url\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"container is-max-desktop\">\n          <h4 className=\"title is-4 has-text-left\"> Art√≠culos publicados</h4>\n\n          {data.allDataYaml.nodes[0].articles.map((article, _) => (\n            <div class=\"columns is-vcentered\">\n              <div class=\"column is-3\">\n                <figure class=\"image\">\n                  <img src={`images/${article.image_path}`} alt=\"img\" />\n                </figure>\n              </div>\n              <div class=\"column is-9\">\n                <p>{article.APA}</p>\n                <p>\n                  <a href={article.url}>[Enlace]</a>\n                  {article.video_url && <a href={article.video_url}>[Video]</a>}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Articles;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport \"./layout.css\";\n\nconst Material = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allDataYaml {\n        nodes {\n          materials {\n            thumbs_path\n            title\n            description\n            url\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"container is-max-desktop\">\n          <h4 className=\"title is-4 has-text-left\"> Material</h4>\n\n          {data.allDataYaml.nodes[0].materials.map((materials, _) => (\n            <div class=\"columns is-vcentered\">\n              <div class=\"column is-3\">\n                <figure class=\"image\">\n                  <img src={`images/${materials.thumbs_path}`} alt=\"img\" />\n                </figure>\n              </div>\n              <div class=\"column is-9\">\n                <p>{materials.description}</p>\n                <p>\n                  <a href={materials.url}>[Enlace]</a>\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Material;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport People from \"./people\";\nimport Articles from \"./articles\";\nimport Material from \"./material\";\nimport \"./layout.css\";\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n\n      <div className=\"container is-max-desktop\">\n        <div\n          style={{ height: \"2px\", backgroundColor: \"lightgrey\", width: \"100%\" }}\n        ></div>\n      </div>\n\n      <People />\n\n      <div className=\"container is-max-desktop\">\n        <div\n          style={{ height: \"2px\", backgroundColor: \"lightgrey\", width: \"100%\" }}\n        ></div>\n      </div>\n\n      <Articles />\n\n      <div className=\"container is-max-desktop\">\n        <div\n          style={{ height: \"2px\", backgroundColor: \"lightgrey\", width: \"100%\" }}\n        ></div>\n      </div>\n\n      <Material />\n    </>\n  );\n};\n\nexport default Layout;\n","import * as React from \"react\";\n\nimport Layout from \"../components/layout\";\n\nconst IndexPage = () => <Layout></Layout>;\n\nexport default IndexPage;\n"],"names":["data","useStaticQuery","className","allDataYaml","nodes","institutions","map","institution","index","key","src","logo_path","alt","name","style","maxHeight","title","frameborder","allowfullscreen","allow","width","height","showcase_url","abstract","team","_","class","image_path","href","email","articles","article","APA","url","video_url","children","materials","thumbs_path","description","siteTitle","site","siteMetadata","backgroundColor"],"sourceRoot":""}